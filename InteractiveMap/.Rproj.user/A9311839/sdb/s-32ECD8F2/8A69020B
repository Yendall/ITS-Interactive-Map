{
    "collab_server" : "",
    "contents" : "devtools::install_github(\"rstudio/shiny\")\nrequire(devtools)\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(maptools)\nlibrary(RMySQL)\nlibrary(geojsonio)\nlibrary(jsonlite)\nlibrary(rgdal)\nlibrary(RJSONIO)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(sp)\nlibrary(KernSmooth)\nlibrary(RColorBrewer)\nlibrary(rCharts)\n\n\n# Connect to TR database\nlapply(dbListConnections(MySQL()), dbDisconnect)\ntermite_db = dbConnect(\n  MySQL(),\n  user='termite',\n  password='T*&^tUYjhgeweis78gvu786%',\n  dbname='termite',\n  host='termiterdsdylannew.chumy75aae7w.ap-southeast-2.rds.amazonaws.com')\n\ndbListTables(termite_db)\ndbListFields(termite_db, 'termiteReport')\n\n# Fetch property data\nrs = dbSendQuery(termite_db, \"SELECT * FROM termiteReport\")\ntermite_data = fetch(rs, n=-1)\n\n# Fetch shire data based on state prefix\nGetShireData <- function(prefix)\n{\n  location <- paste('ShapeFiles/',tolower(prefix),\"lgapolygonshp/\",toupper(prefix),\"_LGA_POLYGON_shp.shp\",sep = \"\")\n  layer <- paste(toupper(prefix),\"_LGA_POLYGON_shp\",sep = \"\")\n  \n  return(readOGR(location,layer=layer,GDAL1_integer64_policy = TRUE))\n}\n\nShires <- new.env()\nShire_Metadata <- new.env()\nShire_names <-c(\"VIC\",\"WA\",\"TAS\",\"NSW\",\"QLD\",\"SA\",\"NT\",\"ALL\")\n\nfor (shire in Shire_names) {\n  Shires[[shire]] <- GetShireData(shire)\n}\n\n# Filter down dataset\ntermites_found = filter(termite_data, termiteFound == 1)\ntermites_notfound = filter(termite_data, termiteFound == 0)\n\n# Declare sf data frame and perform Spatial union between points (assumed radius)\nRadialUnion <- function()\n{\n  \n  sf_df <- st_as_sf(termites_found, coords=c(\"longitude\",\"latitude\"))\n  sf_circles <- st_buffer(sf_df, dist = 0.01)\n  sf_combined <- st_union(sf_circles)\n  sp <- as(sf_combined, 'Spatial')\n  return(sf_combined)\n}\n\n# Check if points fall within a shire and start aggregating\nAggregatePoints <- function()\n{\n  coordinates(termites_found) <- ~ longitude + latitude\n  proj4string(termites_found) <- proj4string(Shires[[\"ALL\"]])\n  proj4string(termites_found) <- CRS(\"+proj=longlat\")\n  termites_found <- spTransform(termites_found, proj4string(Shires[[\"ALL\"]]))\n  overlap <- (over(termites_found, Shires[[\"ALL\"]]))\n  overlap <- sapply(overlap, table)\n  return(overlap)\n}\n\nMergeDataFrames <- function(shire_prefix,shire_col, df_aggregate)\n{\n  colnames(df_aggregate) <- c(shire_col, \"TermiteCount\")\n  merged <- merge(Shires[[shire_prefix]], df_aggregate, by = shire_col)\n  return(merged)\n}\n\n# Aggregate all data points for each shire in Australia\n\noverlap <- AggregatePoints()\nprint(\"hello\")\n\nVIC_aggregate <- as.data.frame(overlap$VIC_LGA__2)\nNSW_aggregate <- as.data.frame(overlap$NSW_LGA__2)\nWA_aggregate  <- as.data.frame(overlap$WA_LGA_s_2)\nTAS_aggregate <- as.data.frame(overlap$TAS_LGA__2)\nQLD_aggregate <- as.data.frame(overlap$QLD_LGA__2)\nNT_aggregate  <- as.data.frame(overlap$NT_LGA_s_2)\nSA_aggregate  <- as.data.frame(overlap$SA_LGA_s_2)\n\nVIC_merged    <- MergeDataFrames(\"VIC\",\"VIC_LGA__2\",VIC_aggregate)\nNSW_merged    <- MergeDataFrames(\"NSW\",\"NSW_LGA__2\",NSW_aggregate)\nWA_merged     <- MergeDataFrames(\"WA\",\"WA_LGA_s_2\",WA_aggregate)\nTAS_merged    <- MergeDataFrames(\"TAS\",\"TAS_LGA__2\",TAS_aggregate)\nQLD_merged    <- MergeDataFrames(\"QLD\",\"QLD_LGA__2\",QLD_aggregate)\nNT_merged     <- MergeDataFrames(\"NT\",\"NT_LGA_s_2\",NT_aggregate)\nSA_merged     <- MergeDataFrames(\"SA\",\"SA_LGA_s_2\",SA_aggregate)\n\nshire_string <- \"<strong>Shire: </strong>\"\ninfestation_string <- \"</br><strong> Termite Infestation Reported: </strong>\" \n\nVIC_popover <- paste0(shire_string,VIC_merged$VIC_LGA__2, infestation_string, VIC_merged$TermiteCount)\nNSW_popover <- paste0(shire_string,NSW_merged$NSW_LGA__2, infestation_string, NSW_merged$TermiteCount)\nWA_popover  <- paste0(shire_string,WA_merged$WA_LGA_s_2, infestation_string, WA_merged$TermiteCount)\nTAS_popover <- paste0(shire_string,TAS_merged$TAS_LGA__2, infestation_string, TAS_merged$TermiteCount)\nQLD_popover <- paste0(shire_string,QLD_merged$QLD_LGA__2, infestation_string, QLD_merged$TermiteCount)\nNT_popover  <- paste0(shire_string,NT_merged$NT_LGA_s_2, infestation_string, NT_merged$TermiteCount)\nSA_popover  <- paste0(shire_string,SA_merged$SA_LGA_s_2, infestation_string, SA_merged$TermiteCount)\n\n# Create union based merges for data points\nunion_polygons <- RadialUnion()\n\n#Create house icon for individual points\nhouse_icon <- makeIcon(\"Icons/House.png\", iconWidth = 12, iconHeight = 12)\n\n",
    "created" : 1501558402810.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1686586538",
    "id" : "8A69020B",
    "lastKnownWriteTime" : 1501558971,
    "last_content_update" : 1501558971957,
    "path" : "E:/GIT-Projects/ITS-Data-Science/InteractiveMap/global.R",
    "project_path" : "global.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}